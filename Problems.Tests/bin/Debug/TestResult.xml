<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="E:\Development\Windows\Project Euler\Problems.Tests\bin\Debug\Problems.Tests.dll" total="129" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2009-09-09" time="04:20:06">
  <environment nunit-version="2.5.2.9222" clr-version="2.0.50727.4927" os-version="Microsoft Windows NT 6.1.7600.0" platform="Win32NT" cwd="C:\Program Files (x86)\Microsoft Visual Studio 9.0\Common7\IDE" machine-name="TB-DESKTOP" user="Torleif" user-domain="TB-Desktop" />
  <culture-info current-culture="nb-NO" current-uiculture="en-US" />
  <test-suite name="E:\Development\Windows\Project Euler\Problems.Tests\bin\Debug\Problems.Tests.dll" executed="True" success="True" time="0.591" asserts="0">
    <results>
      <test-suite name="Problems" executed="True" success="True" time="0.574" asserts="0">
        <results>
          <test-suite name="Tests" executed="True" success="True" time="0.571" asserts="0">
            <results>
              <test-suite name="EratosthenesTests" executed="True" success="True" time="0.061" asserts="0">
                <results>
                  <test-case name="Problems.Tests.EratosthenesTests.GetEnumerator_FirstFiveHundredNumbers_AreCorrect" executed="True" success="True" time="0.035" asserts="1" />
                  <test-case name="Problems.Tests.EratosthenesTests.GetEnumerator_GenericAndNonGeneric_FirstHundredAreTheSame" executed="True" success="True" time="0.001" asserts="100" />
                  <test-case name="Problems.Tests.EratosthenesTests.GetEnumerator_RanTwice_GetSameNumbers" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="Problems.Tests.EratosthenesTests.GetPrimeFactors_Example_IsCorrect1" executed="True" success="True" time="0.003" asserts="1" />
                  <test-case name="Problems.Tests.EratosthenesTests.GetPrimeFactors_Example_IsCorrect2" executed="True" success="True" time="0.000" asserts="1" />
                  <test-case name="Problems.Tests.EratosthenesTests.GetPrimeFactors_Example_IsCorrect3" executed="True" success="True" time="0.000" asserts="1" />
                  <test-suite name="GetPrimeFactors_Overloads_SameResultsWhenUsingDefaultPrimeSequence" executed="True" success="True" time="0.004" asserts="0">
                    <results>
                      <test-case name="Problems.Tests.EratosthenesTests.GetPrimeFactors_Overloads_SameResultsWhenUsingDefaultPrimeSequence(120)" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="Problems.Tests.EratosthenesTests.GetPrimeFactors_Overloads_SameResultsWhenUsingDefaultPrimeSequence(15)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.EratosthenesTests.GetPrimeFactors_Overloads_SameResultsWhenUsingDefaultPrimeSequence(12)" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="FibonacciTests" executed="True" success="True" time="0.008" asserts="0">
                <results>
                  <test-case name="Problems.Tests.FibonacciTests.GetEnumerator_EulerExample_IsCorrectSequence" executed="True" success="True" time="0.005" asserts="1" />
                  <test-case name="Problems.Tests.FibonacciTests.GetEnumerator_FirstFifteenNumbers_AreCorrect" executed="True" success="True" time="0.001" asserts="1" />
                  <test-case name="Problems.Tests.FibonacciTests.GetEnumerator_GenericAndNonGeneric_FirstHundredAreTheSame" executed="True" success="True" time="0.001" asserts="100" />
                </results>
              </test-suite>
              <test-suite name="NumbersTests" executed="True" success="True" time="0.119" asserts="0">
                <results>
                  <test-suite name="GetNumberOfDigits_Int32Numbers" executed="True" success="True" time="0.008" asserts="0">
                    <results>
                      <test-case name="Problems.Tests.NumbersTests.GetNumberOfDigits_Int32Numbers(4294967295,10)" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.GetNumberOfDigits_Int32Numbers(0,1)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.GetNumberOfDigits_Int32Numbers(1,1)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.GetNumberOfDigits_Int32Numbers(11,2)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.GetNumberOfDigits_Int32Numbers(111,3)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.GetNumberOfDigits_Int32Numbers(1234567,7)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.GetNumberOfDigits_Int32Numbers(0,1)" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="GetNumberOfDigits_Int64Numbers" executed="True" success="True" time="0.009" asserts="0">
                    <results>
                      <test-case name="Problems.Tests.NumbersTests.GetNumberOfDigits_Int64Numbers(18446744073709551615UL,20)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.GetNumberOfDigits_Int64Numbers(11UL,2)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.GetNumberOfDigits_Int64Numbers(1234567UL,7)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.GetNumberOfDigits_Int64Numbers(ulong.MinValue,1)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.GetNumberOfDigits_Int64Numbers(111UL,3)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.GetNumberOfDigits_Int64Numbers(ulong.MinValue,1)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.GetNumberOfDigits_Int64Numbers(1UL,1)" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="GreatestCommonDivisor_Examples_AreCorrect" executed="True" success="True" time="0.008" asserts="0">
                    <results>
                      <test-case name="Problems.Tests.NumbersTests.GreatestCommonDivisor_Examples_AreCorrect(81UL,57UL)" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.GreatestCommonDivisor_Examples_AreCorrect(5UL,5UL)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.GreatestCommonDivisor_Examples_AreCorrect(15UL,5UL)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.GreatestCommonDivisor_Examples_AreCorrect(7UL,9UL)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.GreatestCommonDivisor_Examples_AreCorrect(12UL,9UL)" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="IsPalindrome_Int32NotPalindromes_ReturnsFalse" executed="True" success="True" time="0.012" asserts="0">
                    <results>
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int32NotPalindromes_ReturnsFalse(221)" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int32NotPalindromes_ReturnsFalse(1234)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int32NotPalindromes_ReturnsFalse(12345)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int32NotPalindromes_ReturnsFalse(54321)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int32NotPalindromes_ReturnsFalse(332211)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int32NotPalindromes_ReturnsFalse(112233)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int32NotPalindromes_ReturnsFalse(21)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int32NotPalindromes_ReturnsFalse(123)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int32NotPalindromes_ReturnsFalse(321)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int32NotPalindromes_ReturnsFalse(122)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int32NotPalindromes_ReturnsFalse(12)" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="IsPalindrome_Int32Palindromes_ReturnsTrue" executed="True" success="True" time="0.011" asserts="0">
                    <results>
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int32Palindromes_ReturnsTrue(21012)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int32Palindromes_ReturnsTrue(212)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int32Palindromes_ReturnsTrue(1001)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int32Palindromes_ReturnsTrue(2112)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int32Palindromes_ReturnsTrue(10101)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int32Palindromes_ReturnsTrue(0)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int32Palindromes_ReturnsTrue(1)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int32Palindromes_ReturnsTrue(11)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int32Palindromes_ReturnsTrue(22)" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int32Palindromes_ReturnsTrue(111)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int32Palindromes_ReturnsTrue(121)" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="IsPalindrome_Int64NotPalindromes_ReturnsFalse" executed="True" success="True" time="0.015" asserts="0">
                    <results>
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int64NotPalindromes_ReturnsFalse(122UL)" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int64NotPalindromes_ReturnsFalse(321UL)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int64NotPalindromes_ReturnsFalse(221UL)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int64NotPalindromes_ReturnsFalse(54321UL)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int64NotPalindromes_ReturnsFalse(332211UL)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int64NotPalindromes_ReturnsFalse(112233UL)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int64NotPalindromes_ReturnsFalse(1234UL)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int64NotPalindromes_ReturnsFalse(12345UL)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int64NotPalindromes_ReturnsFalse(12UL)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int64NotPalindromes_ReturnsFalse(21UL)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int64NotPalindromes_ReturnsFalse(123UL)" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="IsPalindrome_Int64Palindromes_ReturnsTrue" executed="True" success="True" time="0.011" asserts="0">
                    <results>
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int64Palindromes_ReturnsTrue(1001UL)" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int64Palindromes_ReturnsTrue(21012UL)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int64Palindromes_ReturnsTrue(1UL)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int64Palindromes_ReturnsTrue(11UL)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int64Palindromes_ReturnsTrue(22UL)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int64Palindromes_ReturnsTrue(111UL)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int64Palindromes_ReturnsTrue(121UL)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int64Palindromes_ReturnsTrue(212UL)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int64Palindromes_ReturnsTrue(ulong.MinValue)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int64Palindromes_ReturnsTrue(2112UL)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.IsPalindrome_Int64Palindromes_ReturnsTrue(10101UL)" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="Reverse_Int32Numbers" executed="True" success="True" time="0.010" asserts="0">
                    <results>
                      <test-case name="Problems.Tests.NumbersTests.Reverse_Int32Numbers(121,121)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.Reverse_Int32Numbers(11,11)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.Reverse_Int32Numbers(1234,4321)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.Reverse_Int32Numbers(1,1)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.Reverse_Int32Numbers(10,1)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.Reverse_Int32Numbers(12,21)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.Reverse_Int32Numbers(123,321)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.Reverse_Int32Numbers(0,0)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.Reverse_Int32Numbers(122,221)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.Reverse_Int32Numbers(221,122)" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="Reverse_Int64Numbers" executed="True" success="True" time="0.011" asserts="0">
                    <results>
                      <test-case name="Problems.Tests.NumbersTests.Reverse_Int64Numbers(122UL,221UL)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.Reverse_Int64Numbers(12UL,21UL)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.Reverse_Int64Numbers(123UL,321UL)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.Reverse_Int64Numbers(121UL,121UL)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.Reverse_Int64Numbers(221UL,122UL)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.Reverse_Int64Numbers(1234UL,4321UL)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.Reverse_Int64Numbers(11UL,11UL)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.Reverse_Int64Numbers(ulong.MinValue,ulong.MinValue)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.Reverse_Int64Numbers(1UL,1UL)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.NumbersTests.Reverse_Int64Numbers(10UL,1UL)" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Solutions" executed="True" success="True" time="0.327" asserts="0">
                <results>
                  <test-suite name="Problem1Tests" executed="True" success="True" time="0.011" asserts="0">
                    <results>
                      <test-case name="Problems.Tests.Solutions.Problem1Tests.AnswerCheck" executed="True" success="True" time="0.011" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="Problem2Tests" executed="True" success="True" time="0.003" asserts="0">
                    <results>
                      <test-case name="Problems.Tests.Solutions.Problem2Tests.AnswerCheck" executed="True" success="True" time="0.003" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="Problem3Tests" executed="True" success="True" time="0.005" asserts="0">
                    <results>
                      <test-case name="Problems.Tests.Solutions.Problem3Tests.AnswerCheck" executed="True" success="True" time="0.003" asserts="1" />
                      <test-case name="Problems.Tests.Solutions.Problem3Tests.ExampleCheck" executed="True" success="True" time="0.001" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="Problem4Tests" executed="True" success="True" time="0.298" asserts="0">
                    <results>
                      <test-case name="Problems.Tests.Solutions.Problem4Tests.AnswerCheck" executed="True" success="True" time="0.290" asserts="1" />
                      <test-suite name="VariousExamples" executed="True" success="True" time="0.006" asserts="0">
                        <results>
                          <test-case name="Problems.Tests.Solutions.Problem4Tests.VariousExamples(1,9L)" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Problems.Tests.Solutions.Problem4Tests.VariousExamples(2,9009L)" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="Problems.Tests.Solutions.Problem4Tests.VariousExamples(0,0L)" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="ProblemBaseTests" executed="True" success="True" time="0.001" asserts="0">
                    <results>
                      <test-case name="Problems.Tests.Solutions.ProblemBaseTests.Constructor_ValidParameters_PropertiesAreCorrect" executed="True" success="True" time="0.000" asserts="3" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="StringsTests" executed="True" success="True" time="0.037" asserts="0">
                <results>
                  <test-suite name="IsPalindrome_False" executed="True" success="True" time="0.012" asserts="0">
                    <results>
                      <test-case name="Problems.Tests.StringsTests.IsPalindrome_False(&quot;ab&quot;)" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="Problems.Tests.StringsTests.IsPalindrome_False(&quot;&quot;)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.StringsTests.IsPalindrome_False(null)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.StringsTests.IsPalindrome_False(&quot;abb&quot;)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.StringsTests.IsPalindrome_False(&quot;abc&quot;)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.StringsTests.IsPalindrome_False(&quot;abca&quot;)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.StringsTests.IsPalindrome_False(&quot;abasdkjqwe&quot;)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.StringsTests.IsPalindrome_False(&quot;æøåæøå&quot;)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.StringsTests.IsPalindrome_False(&quot;aA&quot;)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.StringsTests.IsPalindrome_False(&quot;aBcDCBA&quot;)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.StringsTests.IsPalindrome_False(&quot;aBcDdCbA&quot;)" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="IsPalindrome_True" executed="True" success="True" time="0.007" asserts="0">
                    <results>
                      <test-case name="Problems.Tests.StringsTests.IsPalindrome_True(&quot;abcddcba&quot;)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.StringsTests.IsPalindrome_True(&quot;aa&quot;)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.StringsTests.IsPalindrome_True(&quot;aaa&quot;)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.StringsTests.IsPalindrome_True(&quot;abba&quot;)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.StringsTests.IsPalindrome_True(&quot;abcdcba&quot;)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.StringsTests.IsPalindrome_True(&quot;a&quot;)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.StringsTests.IsPalindrome_True(&quot;æøååøæ&quot;)" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="Reverse" executed="True" success="True" time="0.005" asserts="0">
                    <results>
                      <test-case name="Problems.Tests.StringsTests.Reverse(&quot;a&quot;,&quot;a&quot;)" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="Problems.Tests.StringsTests.Reverse(&quot;ABC&quot;,&quot;CBA&quot;)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.StringsTests.Reverse(&quot;AbC&quot;,&quot;CbA&quot;)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.StringsTests.Reverse(&quot;ab&quot;,&quot;ba&quot;)" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="Problems.Tests.StringsTests.Reverse(&quot;&quot;,&quot;&quot;)" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="Problems.Tests.StringsTests.Reverse(&quot;abc&quot;,&quot;cba&quot;)" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-case name="Problems.Tests.StringsTests.Reverse_NullString_ThrowsArgumentNullException" executed="True" success="True" time="0.007" asserts="1" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>